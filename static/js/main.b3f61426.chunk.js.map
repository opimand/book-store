{"version":3,"sources":["helpers.js","redux/booksReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/types.js","redux/actions.js","components/Rating.js","components/ButtonSend.js","components/ReviewForm.js","components/NoItemsTitle.js","components/Reviews.js","components/Spinner.js","components/addToShell.js","components/Chips.js","components/DetailBook.js","components/CreateNotification.js","components/CreateShelf.js","components/Shelves.js","components/Like.js","components/Card.js","components/GridBooks.js","components/Sidebar.js","App.js","index.js","img/no-photo.svg","img/spinner.svg","img/nightMode.svg"],"names":["addReview","booksArr","newBook","map","book","id","reviews","concat","review","likeBook","booksArray","item","liked","rateBook","rating","addBookOnShelf","shelves","shelfToAdd","bookToAdd","shelf","books","initialState","fetchedBooks","loading","darkMode","rootReducer","combineReducers","state","action","type","payload","app","fetchBooks","dispatch","a","fetch","headers","response","json","items","forEach","StarRating","React","useState","value","setValue","useDispatch","Box","component","mb","ml","pl","borderColor","Rating","name","onChange","e","newValue","useStyles","makeStyles","theme","button","marginTop","spacing","icon","marginRight","SendButton","disabled","classes","Button","variant","color","className","root","width","ReviewForm","setReview","onSubmit","preventDefault","data","addBookReview","noValidate","autoComplete","TextField","target","multiline","label","title","textAlign","NoItemsTitle","Typography","padding","margin","display","flexDirection","Reviews","console","log","length","Paper","key","Math","random","toString","substring","spinner","position","transform","top","left","height","Spinner","src","alt","container","flexWrap","formControl","minWidth","AddToShell","open","setOpen","setShelf","useSelector","categories","volumeInfo","filteredCategories","handleClose","onClick","Dialog","onClose","DialogTitle","DialogContent","FormControl","InputLabel","Select","labelId","event","input","Input","MenuItem","DialogActions","maxWidth","chips","chip","noLabel","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Chips","setCategory","useTheme","categoryName","setCategoryName","useEffect","multiple","renderValue","selected","Chip","right","reviewsWrap","DetailBook","props","match","params","find","authors","publisher","imageLinks","Container","thumbnail","noImage","align","Alert","elevation","CreateNotification","isNotify","Snackbar","autoHideDuration","severity","textField","marginLeft","form","paper","CreateShelf","description","setNotify","handleInputChange","Date","getTime","Grid","justify","setTimeout","handleSubmit","fullWidth","wrapper","marginBottom","Shelves","sm","Link","to","Like","xmlns","enableBackground","viewBox","d","fill","shortString","string","MediaCard","isLiked","image","author","themeColor","justifyContent","alignContent","backgroundColor","palette","secondary","light","text","primary","media","backgroundSize","setLike","Card","CardMedia","noPhoto","CardContent","gutterBottom","CardActions","IconButton","aria-label","size","flexGrow","alignItems","center","GridBooks","shelfId","см","lg","history","createBrowserHistory","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","iconNight","contrastText","PersistentDrawerLeft","favoriteBooks","filter","apply","Set","Boolean","getCategories","i","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","nightSvg","Drawer","anchor","direction","Divider","List","ListItem","ListItemText","exact","path","render","darkTheme","main","dark","background","default","overrides","MuiPaper","MuiRating","iconEmpty","MuiInputLabel","outlined","MuiButton","containedPrimary","MuiIconButton","lightTheme","App","createMuiTheme","persistedState","localStorage","getItem","JSON","parse","store","createStore","compose","applyMiddleware","thunk","subscribe","setItem","stringify","getState","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b3f61426.chunk.js","sourcesContent":["export const addReview = (booksArr, newBook) =>\n  booksArr.map((book) => {\n    if (book.id === newBook.id) {\n      return {\n        ...book,\n        reviews: book.reviews ? book.reviews.concat(newBook.review) : [newBook.review],\n      };\n    }\n\n    return book;\n  });\n\nexport const likeBook = (booksArray, newBook) =>\n  booksArray.map((item) => {\n    if (item.id === newBook.id) {\n      return {\n        ...item,\n        liked: newBook.liked,\n      };\n    }\n\n    return item;\n  });\n\nexport const rateBook = (booksArray, newBook) =>\n  booksArray.map((item) => {\n    if (item.id === newBook.id) {\n      return {\n        ...item,\n        rating: newBook.rating,\n      };\n    }\n\n    return item;\n  });\n\nexport function getCategories(books) {\n  const categories = [].concat.apply([], books);\n  const category = [...new Set(categories)];\n\n  return category.filter(Boolean);\n}\n\nexport function getId() {\n  return 'id' + new Date().getTime();\n}\n\nexport const addBookOnShelf = (shelves, { shelfToAdd, bookToAdd }) => {\n  return shelves.map((shelf) => {\n    if (shelf.id === shelfToAdd) {\n      return {\n        ...shelf,\n        books: shelf.books.concat(bookToAdd),\n      };\n    }\n    return shelf;\n  });\n};\n","import {\n  ADD_BOOK_TO_SHELF,\n  ADD_REVIEW_BOOK,\n  ADD_SHELF,\n  ADD_SHELF_REVIEW,\n  FETCH_BOOKS,\n  LIKE_BOOK,\n  RATE_BOOK,\n} from './types';\nimport { addBookOnShelf, addReview, likeBook, rateBook } from '../helpers';\n\nconst initialState = {\n  fetchedBooks: [],\n  shelves: [],\n};\n\nexport const booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_BOOKS:\n      return { ...state, fetchedBooks: action.payload };\n    case ADD_REVIEW_BOOK:\n      return {\n        ...state,\n        fetchedBooks: addReview(state.fetchedBooks, action.payload),\n      };\n    case LIKE_BOOK:\n      return {\n        ...state,\n        fetchedBooks: likeBook(state.fetchedBooks, action.payload),\n      };\n    case RATE_BOOK:\n      return {\n        ...state,\n        fetchedBooks: rateBook(state.fetchedBooks, action.payload),\n      };\n    case ADD_SHELF:\n      return {\n        ...state,\n        shelves: [...state.shelves, action.payload],\n      };\n\n    case ADD_BOOK_TO_SHELF:\n      return {\n        ...state,\n        shelves: addBookOnShelf(state.shelves, action.payload),\n      };\n    case ADD_SHELF_REVIEW:\n      return {\n        ...state,\n        shelves: addReview(state.shelves, action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","import { SHOW_LOADER, HIDE_LOADER, DARK_MODE } from './types';\n\nconst initialState = {\n  loading: false,\n  darkMode: false,\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return { ...state, loading: true };\n    case HIDE_LOADER:\n      return { ...state, loading: false };\n    case DARK_MODE:\n      return { ...state, darkMode: !state.darkMode };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { booksReducer } from './booksReducer';\nimport { appReducer } from './appReducer';\n\nexport const rootReducer = combineReducers({\n  books: booksReducer,\n  app: appReducer,\n});\n","export const FETCH_BOOKS = 'BOOKS/FETCH_BOOKS';\nexport const ADD_REVIEW_BOOK = 'BOOKS/ADD_REVIEW_BOOK';\nexport const LIKE_BOOK = 'BOOKS/LIKE_BOOK';\nexport const RATE_BOOK = 'BOOKS/RATE_BOOK';\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\nexport const DARK_MODE = 'APP/DARK_MODE';\nexport const ADD_SHELF = 'SHELF/ADD_SHELF';\nexport const ADD_SHELF_REVIEW = 'SHELF/ADD_SHELF_REVIEW';\nexport const ADD_BOOK_TO_SHELF = 'SHELF/ADD_BOOK_TO_SHELF';\n","import {\n  ADD_BOOK_TO_SHELF,\n  ADD_REVIEW_BOOK,\n  ADD_SHELF,\n  ADD_SHELF_REVIEW,\n  DARK_MODE,\n  FETCH_BOOKS,\n  HIDE_LOADER,\n  LIKE_BOOK,\n  RATE_BOOK,\n  SHOW_LOADER,\n} from './types';\n\nexport function fetchBooks() {\n  return async (dispatch) => {\n    dispatch(showLoader());\n    const response = await fetch('https://google-books.p.rapidapi.com/volumes', {\n      headers: {\n        'Content-Type': 'application/json',\n        'x-rapidapi-host': 'google-books.p.rapidapi.com',\n        'x-rapidapi-key': 'c6ccbe2e2dmsh79bc6b5750cbea0p12bd01jsnca0a2c5fdee6',\n      },\n    });\n    const json = await response.json();\n    json.items.forEach((item) => ((item.liked = false), (item.rating = 0), (item.reviews = [])));\n    dispatch({ type: FETCH_BOOKS, payload: json.items });\n    dispatch(hideLoader());\n  };\n}\n\nexport function addBookReview(data) {\n  return {\n    type: ADD_REVIEW_BOOK,\n    payload: data,\n  };\n}\n\nexport function likeBook(data) {\n  return {\n    type: LIKE_BOOK,\n    payload: data,\n  };\n}\n\nexport function rateBook(data) {\n  return {\n    type: RATE_BOOK,\n    payload: data,\n  };\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER,\n  };\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER,\n  };\n}\n\nexport function darkModeToggle() {\n  return {\n    type: DARK_MODE,\n  };\n}\n\nexport function addShelf(data) {\n  return {\n    type: ADD_SHELF,\n    payload: data,\n  };\n}\n\nexport function addBookToShelf(data) {\n  return {\n    type: ADD_BOOK_TO_SHELF,\n    payload: data,\n  };\n}\n\nexport function addShelfReview(data) {\n  return {\n    type: ADD_SHELF_REVIEW,\n    payload: data,\n  };\n}\n","import React from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport { rateBook } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\n\nexport default function StarRating({ rating, id }) {\n  const [value, setValue] = React.useState(rating);\n  const dispatch = useDispatch();\n\n  function ratingHandler(e, newValue) {\n    setValue(newValue);\n    dispatch(rateBook({ id, rating: newValue }));\n  }\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} ml={'-4px'} pl={0} borderColor=\"transparent\">\n        <Rating name=\"simple-controlled\" value={value} onChange={ratingHandler} />\n      </Box>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: theme.spacing(1),\n  },\n  icon: {\n    marginRight: 10,\n  },\n}));\n\nexport default function SendButton({ disabled }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Button\n        disabled={!disabled}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        <SendIcon className={classes.icon} />\n        Send\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SendButton from './ButtonSend';\nimport { useDispatch } from 'react-redux';\nimport { addBookReview, addShelfReview } from '../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      width: '100%',\n    },\n  },\n}));\n\nexport default function ReviewForm({ id, shelf }) {\n  const classes = useStyles();\n  const [review, setReview] = useState('');\n  const dispatch = useDispatch();\n\n  function handleChange(e) {\n    setReview(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(shelf ? addShelfReview({ id, review }) : addBookReview({ id, review }));\n    setReview('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        onChange={handleChange}\n        multiline\n        id=\"outlined-basic\"\n        label=\"Review\"\n        variant=\"outlined\"\n        value={review}\n      />\n      <SendButton disabled={review} />\n    </form>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(3),\n    textAlign: 'center',\n  },\n}));\n\nexport function NoItemsTitle({ title }) {\n  const classes = useStyles();\n\n  return <Typography className={classes.title}>No {title} yet</Typography>;\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { NoItemsTitle } from './NoItemsTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 10,\n    marginTop: theme.spacing(1),\n    margin: '0 auto',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column-reverse',\n  },\n  review: {\n    textAlign: 'center',\n  },\n}));\nexport default function Reviews({ reviews }) {\n  const classes = useStyles();\n  console.log('reviews: ', reviews);\n  if (reviews.length) {\n    return reviews.map((review) => (\n      <Paper key={Math.random().toString(36).substring(7)} className={classes.root}>\n        <Typography>{review}</Typography>\n      </Paper>\n    ));\n  } else if (reviews.length < 1) {\n    return <NoItemsTitle title={'reviews'} />;\n  }\n}\n","import React from 'react';\nimport spinner from '../img/spinner.svg';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  spinner: {\n    position: 'absolute',\n    transform: 'translate(-50%, -50%)',\n    top: '50%',\n    left: '50%',\n    width: '50px',\n    height: '50px',\n  },\n});\nexport default function Spinner() {\n  const classes = useStyles();\n\n  return <img src={spinner} className={classes.spinner} alt=\"spinner\" />;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBookToShelf } from '../redux/actions';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  button: {\n    margin: '10px 0',\n  },\n}));\n\nexport default function AddToShell({ book }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [shelf, setShelf] = React.useState('');\n  const shelves = useSelector((state) => state.books.shelves);\n  const { categories } = book.volumeInfo;\n\n  const filteredCategories = categories\n    ? categories.map((item) => {\n        // shelves.categories.indexOf(item);\n      })\n    : null;\n\n  console.log('filteredCategories: ', filteredCategories);\n\n  const handleChange = (event) => {\n    setShelf(event.target.value || '');\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    dispatch(addBookToShelf({ shelfToAdd: shelf, bookToAdd: book }));\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={handleClickOpen}\n      >\n        Add book to shelf\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Choose a shelf</DialogTitle>\n        <DialogContent>\n          <form className={classes.container}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-dialog-select-label\">Shelf</InputLabel>\n              <Select\n                labelId=\"demo-dialog-select-label\"\n                id=\"demo-dialog-select\"\n                value={shelf}\n                onChange={handleChange}\n                input={<Input />}\n              >\n                <MenuItem value=\"\">\n                  <em>No shelves</em>\n                </MenuItem>\n                {shelves\n                  ? shelves.map((shelf) => <MenuItem value={shelf.id}>{shelf.name}</MenuItem>)\n                  : null}\n              </Select>\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} disabled={!shelf} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n    maxWidth: 300,\n    marginRight: 0,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function Chips({ categories, setCategory, shelf }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [categoryName, setCategoryName] = React.useState([]);\n\n  useEffect(() => {\n    setCategory({ ...shelf, categories: categoryName });\n  }, [categoryName]);\n\n  const handleChange = (event) => {\n    setCategoryName(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"mutiple-chip-label\">Category:</InputLabel>\n        <Select\n          labelId=\"mutiple-chip-label\"\n          id=\"mutiple-chip\"\n          multiple\n          value={categoryName}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-chip\" />}\n          renderValue={(selected) => (\n            <div className={classes.chips}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {categories.map((name) => (\n            <MenuItem key={name} value={name} style={getStyles(name, categoryName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBooks } from '../redux/actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport StarRating from './Rating';\nimport ReviewForm from './ReviewForm';\nimport noImage from '../img/no-photo.svg';\nimport Reviews from './Reviews';\nimport Spinner from './Spinner';\nimport AddToShell from './addToShell';\nimport Chips from './Chips';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 10,\n    margin: '0 auto',\n    display: 'flex',\n  },\n  left: {\n    marginRight: 20,\n  },\n  right: {\n    width: '100%',\n  },\n  reviewsWrap: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n  },\n  chip: {\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nexport default function DetailBook(props) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!books.length) {\n      dispatch(fetchBooks());\n    }\n  }, []);\n\n  const classes = useStyles();\n  const id = props.match.params.id;\n  const books = useSelector((state) => state.books.fetchedBooks);\n  const book = books.find((book) => book.id === id);\n\n  if (book) {\n    const { title, authors, publisher, imageLinks, categories } = book.volumeInfo;\n    const { reviews, id, rating } = book;\n    console.log(book);\n    return (\n      <Container maxWidth=\"md\">\n        <Paper className={classes.root}>\n          <div className={classes.left}>\n            <img src={imageLinks ? imageLinks.thumbnail : noImage} alt=\"book img\" />\n          </div>\n          <div className={classes.right}>\n            <Typography variant=\"h4\" align=\"left\" color=\"textPrimary\" className=\"book__title\">\n              {title}\n            </Typography>\n            <Typography align=\"left\" color=\"textPrimary\" className=\"book__info\">\n              {authors}\n            </Typography>\n            <Typography align=\"left\" color=\"textPrimary\" className=\"book__info\">\n              {publisher}\n            </Typography>\n            <div className={classes.chips}>\n              {categories\n                ? categories.map((value) => (\n                    <Chip key={value} label={value} className={classes.chip} />\n                  ))\n                : null}\n            </div>\n            <StarRating rating={rating} id={id} />\n            <AddToShell book={book} />\n            <ReviewForm id={id} />\n          </div>\n        </Paper>\n        <div className={classes.reviewsWrap}>\n          <Reviews reviews={reviews} />\n        </div>\n      </Container>\n    );\n  } else return <div></div>;\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CreateNotification({ isNotify }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={isNotify} autoHideDuration={6000}>\n        <Alert severity=\"success\">Shelf successfully created!</Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { addShelf } from '../redux/actions';\nimport { getId } from '../helpers';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Chips from './Chips';\nimport CreateNotification from './CreateNotification';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: '600px',\n    width: '100%',\n    margin: '0 auto',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '25ch',\n  },\n  form: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    padding: '10px',\n  },\n  button: {\n    marginTop: 20,\n  },\n}));\n\nexport function CreateShelf({ categories }) {\n  const classes = useStyles();\n  const [shelf, setShelf] = useState({\n    name: '',\n    description: '',\n    books: [],\n    reviews: [],\n  });\n  const [isNotify, setNotify] = useState(false);\n  const dispatch = useDispatch();\n  console.log('isNotify', isNotify);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(addShelf(shelf));\n    setNotify(true);\n    setShelf({\n      name: '',\n      description: '',\n    });\n    setTimeout(() => {\n      setNotify(false);\n    }, 1000);\n  }\n\n  function handleInputChange(e) {\n    setShelf({\n      ...shelf,\n      id: getId(),\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <Grid container justify=\"center\" className={classes.root}>\n      <Paper className={classes.paper}>\n        <form onSubmit={(e) => handleSubmit(e)} className={classes.form}>\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Name of shelf\"\n            fullWidth\n            margin=\"none\"\n            name=\"name\"\n            value={shelf.name}\n            onChange={handleInputChange}\n          />\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Description of shelf\"\n            fullWidth\n            margin=\"normal\"\n            name=\"description\"\n            value={shelf.description}\n            onChange={handleInputChange}\n          />\n          <Chips categories={categories} setCategory={setShelf} shelf={shelf} />\n          <Button className={classes.button} variant=\"contained\" color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </form>\n      </Paper>\n      <CreateNotification isNotify={isNotify} />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport ReviewForm from './ReviewForm';\nimport Reviews from './Reviews';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NoItemsTitle } from './NoItemsTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    marginTop: theme.spacing(0.5),\n  },\n  form: {\n    marginBottom: theme.spacing(1),\n  },\n  spacing: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  title: {\n    marginTop: theme.spacing(3),\n  },\n}));\nexport function Shelves({ shelves }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid container spacing={3} justify=\"center\">\n        {shelves.length ? (\n          shelves.map(({ name, description, id, reviews }) => (\n            <Grid item sm={12}>\n              <Paper className={classes.spacing}>\n                <Typography>Name: {name}</Typography>\n                <Typography>Description: {description}</Typography>\n                <Button\n                  className={classes.button}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  component={Link}\n                  to={`/shelves/${id}`}\n                >\n                  Open shelf\n                </Button>\n\n                <ReviewForm className={classes.form} id={id} shelf=\"shelf\" />\n\n                <div className={classes.wrapper}>\n                  <Reviews reviews={reviews} />\n                </div>\n              </Paper>\n            </Grid>\n          ))\n        ) : (\n          <NoItemsTitle title={'shelves'} />\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Like({ disabled }) {\n  const color = disabled ? '#f44336' : '#878686';\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      id=\"color\"\n      enableBackground=\"new 0 0 24 24\"\n      height=\"15\"\n      viewBox=\"0 0 24 24\"\n      width=\"15\"\n    >\n      <path\n        d=\"m11.466 22.776c.141.144.333.224.534.224s.393-.08.534-.224l9.594-9.721c4.001-4.053 1.158-11.055-4.532-11.055-3.417 0-4.985 2.511-5.596 2.98-.614-.471-2.172-2.98-5.596-2.98-5.672 0-8.55 6.984-4.531 11.055z\"\n        fill={color}\n      />\n    </svg>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { likeBook } from '../redux/actions';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Like from './Like';\nimport noPhoto from '../img/no-photo.svg';\n\nfunction shortString(string) {\n  let bookTitle;\n  if (string.length > 15) {\n    bookTitle = string.substring(0, 25) + '...';\n  } else return string;\n\n  return bookTitle;\n}\n\nexport default function MediaCard({ isLiked, id, title, image, author, categories, theme }) {\n  const themeColor = useTheme();\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n      minWidth: 320,\n      justifyContent: 'center',\n      alignContent: 'center',\n      backgroundColor: themeColor.palette.secondary.light,\n      color: themeColor.palette.text.primary,\n    },\n    media: {\n      height: 140,\n      backgroundSize: 'cover',\n    },\n    margin: {\n      marginTop: 10,\n    },\n  });\n  const classes = useStyles();\n  const [liked, setLike] = useState(isLiked);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLike(!isLiked);\n  }, [isLiked]);\n\n  function handlerClick() {\n    dispatch(likeBook({ id, liked }));\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={image ? image.thumbnail : noPhoto}\n        title={title}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h5\">\n          {shortString(title)}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n          Author: {author ? shortString(author) : 'Unknown'}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" className={classes.margin}>\n          Category: {categories ? categories : 'Unknown'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <IconButton onClick={handlerClick} aria-label=\"like\">\n          <Like width={15} height={15} disabled={isLiked} />\n        </IconButton>\n        <Button component={Link} to={'/' + id} size=\"small\" color=\"primary\" variant=\"contained\">\n          Review\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport MediaCard from './Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { NoItemsTitle } from './NoItemsTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    marginTop: 20,\n  },\n  center: {\n    marginTop: 20,\n    textAlign: 'center ',\n  },\n}));\n\nexport function GridBooks({ books, title, match, shelves }) {\n  const classes = useStyles();\n\n  if (books === false) {\n    return <NoItemsTitle title={title} />;\n  } else if (match) {\n    const id = match.params.shelfId;\n    const shelf = shelves.find((shelf) => shelf.id === id);\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\">\n          {shelf.books.map(\n            ({\n              id,\n              liked,\n              volumeInfo: { imageLinks: image, title, authors, publisher, categories },\n            }) => (\n              <Grid item см={6} lg={3} key={id}>\n                <MediaCard\n                  key={id}\n                  id={id}\n                  image={image}\n                  title={title}\n                  author={authors}\n                  publisher={publisher}\n                  categories={categories}\n                  isLiked={liked}\n                />\n              </Grid>\n            )\n          )}\n        </Grid>\n      </div>\n    );\n  } else if (books) {\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={3} justify=\"center\">\n          {books.map(\n            ({\n              id,\n              liked,\n              volumeInfo: { imageLinks: image, title, authors, publisher, categories },\n            }) => (\n              <Grid item см={6} lg={3} key={id}>\n                <MediaCard\n                  key={id}\n                  id={id}\n                  image={image}\n                  title={title}\n                  author={authors}\n                  publisher={publisher}\n                  categories={categories}\n                  isLiked={liked}\n                />\n              </Grid>\n            )\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Router, Route, Link, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { darkModeToggle, fetchBooks } from '../redux/actions';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DetailBook from './DetailBook';\nimport Spinner from './Spinner';\nimport { CreateShelf } from './CreateShelf';\nimport { getCategories } from '../helpers';\nimport { Shelves } from './Shelves';\nimport { GridBooks } from './GridBooks';\nimport nightSvg from '../img/nightMode.svg';\n\nconst drawerWidth = 240;\nconst history = createBrowserHistory();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    marginTop: 50,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  iconNight: {\n    width: '15px',\n    height: '15px',\n    marginTop: '-2px',\n    marginRight: '5px',\n  },\n  button: {\n    color: theme.palette.primary.contrastText,\n    marginLeft: '10px',\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const books = useSelector((state) => state.books.fetchedBooks);\n  const loading = useSelector((state) => state.app.loading);\n  const shelves = useSelector((state) => state.books.shelves);\n  const favoriteBooks = books.filter((book) => book.liked === true);\n  const categories = getCategories(books.map((i) => i.volumeInfo.categories));\n\n  useEffect(() => {\n    if (!books.length) {\n      dispatch(fetchBooks());\n    }\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  function darkModeHandler() {\n    dispatch(darkModeToggle());\n  }\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <Router history={history}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Books\n            </Typography>\n            <Button className={clsx(classes.button)} onClick={darkModeHandler}>\n              <img className={classes.iconNight} src={nightSvg} alt=\"night\" />\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button component={Link} to=\"/\">\n              <ListItemText>Books</ListItemText>\n            </ListItem>\n            <ListItem button component={Link} to=\"/favorites\">\n              <ListItemText>Favorites</ListItemText>\n            </ListItem>\n            <ListItem button component={Link} to=\"/create\">\n              <ListItemText>Create shelf</ListItemText>\n            </ListItem>\n            <ListItem button component={Link} to=\"/shelves\">\n              <ListItemText>Shelves</ListItemText>\n            </ListItem>\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <Route exact path=\"/\" render={() => <GridBooks books={books} title=\"books\" />} />\n          <Route\n            path=\"/favorites\"\n            render={() => <GridBooks books={favoriteBooks} title=\"favorites\" />}\n          />\n          <Route\n            exact\n            path=\"/shelves\"\n            render={() => <Shelves shelves={shelves} />}\n            title=\"Shelves\"\n          />\n          <Route\n            path=\"/create\"\n            render={() => <CreateShelf shelves={shelves} categories={categories} title=\"shelves\" />}\n            title=\"Create shelf\"\n          />\n          <Route path=\"/:id\" component={DetailBook} />\n          <Route\n            path=\"/shelves/:shelfId\"\n            render={({ match }) => <GridBooks shelves={shelves} title=\"shelves\" match={match} />}\n          />\n        </main>\n      </div>\n    </Router>\n  );\n}\n","import * as React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Sidebar from './components/Sidebar';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\n\nconst darkTheme = {\n  palette: {\n    primary: {\n      light: '#33ab9f',\n      main: '#292929',\n      dark: '#d0c9c9',\n      contrastText: '#ffffff',\n    },\n    text: {\n      primary: '#e7e3e3',\n    },\n\n    secondary: {\n      light: '#383636',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#dc3434',\n    },\n    background: {\n      default: '#292929',\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: '#292929',\n      },\n    },\n    MuiRating: {\n      iconEmpty: {\n        color: '#eacdcd',\n      },\n    },\n    MuiInputLabel: {\n      outlined: {\n        color: '#eacdcd',\n      },\n      root: {\n        color: '#eacdcd',\n        '&$focused': {\n          color: '#eacdcd',\n        },\n      },\n    },\n    MuiButton: {\n      label: {\n        color: '#eacdcd',\n      },\n      containedPrimary: {\n        '&:hover': {\n          backgroundColor: '#564f4f',\n        },\n      },\n    },\n\n    MuiIconButton: {\n      label: {\n        color: '#eacdcd',\n      },\n    },\n  },\n};\n\nconst lightTheme = {\n  palette: {\n    primary: {\n      light: '#9157e3',\n      main: '#54318b',\n      dark: '#54318b',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#fff',\n      main: '#008785',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n};\n\nfunction App() {\n  const darkMode = useSelector((state) => state.app.darkMode);\n  const theme = createMuiTheme(darkMode ? darkTheme : lightTheme);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Sidebar />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\n\nconst persistedState = localStorage.getItem('reduxState')\n  ? JSON.parse(localStorage.getItem('reduxState'))\n  : {};\n\nconst devTools =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n    : null;\n\nconst store = createStore(rootReducer, persistedState, compose(applyMiddleware(thunk), devTools));\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\n});\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/no-photo.960ef455.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.62e57662.svg\";","module.exports = __webpack_public_path__ + \"static/media/nightMode.b6431152.svg\";"],"sourceRoot":""}